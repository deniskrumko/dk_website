# Generated by Django 2.1.2 on 2018-11-06 15:38

import django.db.models.deletion
from django.db import migrations, models

import django_extensions.db.fields


class Migration(migrations.Migration):

    dependencies = [
        ('diary', '0003_data_migration'),
    ]

    operations = [
        migrations.CreateModel(
            name='DiaryTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('name', models.CharField(max_length=255, null=True, verbose_name='name')),
            ],
            options={
                'verbose_name': 'DiaryTag',
                'verbose_name_plural': 'DiaryTags',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='DiaryTagValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('value', models.CharField(blank=True, max_length=255, null=True, verbose_name='value')),
                ('entry', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tags', to='diary.DiaryEntry', verbose_name='entry')),
                ('tag', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='values', to='diary.DiaryTag', verbose_name='tag')),
            ],
            options={
                'verbose_name': 'Diary tag value',
                'verbose_name_plural': 'Diary tag values',
                'ordering': ('tag__name', 'value'),
            },
        ),
        migrations.AddField(
            model_name='diarytag',
            name='entries',
            field=models.ManyToManyField(blank=True, through='diary.DiaryTagValue', to='diary.DiaryEntry', verbose_name='entries'),
        ),
    ]
